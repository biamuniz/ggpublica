library(ggplot2)
library(extrafont)
font_import(pattern = "bitter")
loadfonts()
library(ggplot2)
library(extrafont)
loadfonts()
loadfonts()
font_import(pattern = "raleway")
font_import(pattern = "raleway")
loadfonts()
my_theme <- theme(
text = element_text(family = "Bitter"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
panel.grid.major = element_line(color = "#E6E6E6"),
panel.grid.minor = element_line(color = "#F2F2F2"),
panel.border = element_blank(),
legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.position = "bottom",
plot.margin = unit(c(1, 1, 1, 1), "cm"),
plot.background = element_rect(fill = "#FFFFFF", color = NA)
)
font_import(pattern = "raleway")
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
data <- data.frame(categorias = c("A", "B", "C", "D"), valores = c(10, 20, 30, 40))
View(data)
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col() +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
my_theme <- my_theme + theme(plot.margin = unit(c(2, 2, 4, 2), "cm"))
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col() +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.5) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
my_theme <- theme(
text = element_text(family = "Bitter"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
#  panel.grid.major = element_line(color = "#E6E6E6"),
#  panel.grid.minor = element_line(color = "#F2F2F2"),
panel.border = element_blank(),
legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.position = "bottom",
plot.margin = unit(c(1, 1, 1, 1), "cm"),
plot.background = element_rect(fill = "#FFFFFF", color = NA)
)
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
my_theme <- theme(
text = element_text(family = "Bitter"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
#  axis.title = element_text(size = 14),
#  axis.text = element_text(size = 12),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
#  panel.grid.major = element_line(color = "#E6E6E6"),
#  panel.grid.minor = element_line(color = "#F2F2F2"),
panel.border = element_blank(),
legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.position = "bottom",
plot.margin = unit(c(1, 1, 1, 1), "cm"),
plot.background = element_rect(fill = "#FFFFFF", color = NA)
)
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data) +
labs(title = "Gráfico de colunas") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
install.packages("Cairo")
ggsave("meu_grafico.svg", width = 8, height = 6, dpi = 300)
theme_set(theme_bw(base_size = 16, base_family = "Bitter"))
# Definir as cores
apublica_colors <- c("#ffd400", "#653399", "#222222", "#000000", "#ffffff")
names(apublica_colors) <- c("yellow", "purple", "dark", "black", "white")
# Criar o tema personalizado
apublica_theme <- function(){
# Definir as opções do tema
theme(
plot.background = element_rect(fill = apublica_colors["white"]),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_blank(),
axis.text = element_text(color = apublica_colors["dark"]),
axis.title = element_text(color = apublica_colors["dark"]),
axis.ticks = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.text = element_text(color = apublica_colors["dark"]),
legend.title = element_text(color = apublica_colors["dark"]),
strip.text = element_text(color = apublica_colors["dark"]),
panel.spacing = unit(0.5, "lines"),
plot.title = element_text(size = 24, hjust = 0.5, color = apublica_colors["dark"]),
plot.subtitle = element_text(size = 16, hjust = 0.5, color = apublica_colors["dark"]),
plot.caption = element_text(size = 12, color = apublica_colors["dark"]),
# Adicionar o logo
plot.margin = unit(c(0, 0, 1, 1), "cm") + theme(plot.margin),
legend.position = "bottom",
legend.margin = margin(10, 0, 0, 0),
legend.box.margin = margin(0, 0, 10, 0),
legend.spacing = unit(0.5, "lines"),
legend.direction = "horizontal",
plot.background = element_rect(fill = apublica_colors["white"]),
plot.margin = margin(1, 1, 2, 1),
# Definir a largura das colunas
geom_bar(position = position_dodge(width = 0.2)),
# Adicionar valores numéricos em cima das barras/colunas
geom_text(aes(label = ifelse(!is.na(..count..), format(..count.., big.mark = ".", decimal.mark = ","), "")),
stat = "count", vjust = -0.5)
)
}
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
apublica_theme()
library(ggplot2)
# Definir as fontes e cores
bitter <- "Bitter-Regular.ttf"
raleway <- "Raleway-Regular.ttf"
cor1 <- "#ffd400"
cor2 <- "#653399"
cor3 <- "#222222"
cor4 <- "#000000"
cor5 <- "#ffffff"
# Definir a função do tema personalizado
meu_tema <- function(){
theme_bw() +
theme(plot.background = element_rect(fill = cor5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_blank(),
legend.position = "none",
text = element_text(family = raleway, color = cor3),
plot.title = element_text(family = bitter, size = 20, color = cor3),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
panel.spacing = unit(0.2, "lines"),
panel.background = element_rect(fill = cor5),
plot.margin = unit(c(1,1,1,1), "cm"))
}
# Definir a função de adicionar labels aos gráficos
adicionar_labels <- function(p) {
p + geom_text(aes(label = round(..y.., 2)),
position = position_stack(vjust = 0.5),
size = 4, color = cor3)
}
# Exemplo de gráfico de colunas com o tema personalizado
ggplot(mtcars, aes(x = factor(cyl), y = mpg, fill = factor(cyl))) +
geom_col(width = 0.2) +
adicionar_labels() +
ggtitle("Miles per gallon by cylinders") +
scale_fill_manual(values = c(cor1, cor2, cor3)) +
xlab("Cylinders") +
ylab("Miles per gallon") +
meu_tema() +
theme(plot.margin = unit(c(1, 1, 3, 1), "cm")) +
annotation_custom(rasterGrob(readPNG("https://apublica.org/wp-content/themes/apublica3/assets/logo-black.small.png"), interpolate=TRUE),
xmin = Inf, xmax = Inf, ymin = Inf, ymax = Inf)
bitter <- "Bitter-Regular.ttf"
raleway <- "Raleway-Regular.ttf"
cor1 <- "#ffd400"
cor2 <- "#653399"
cor3 <- "#222222"
cor4 <- "#000000"
cor5 <- "#ffffff"
meu_tema <- function(){
theme_bw() +
theme(plot.background = element_rect(fill = cor5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_blank(),
legend.position = "none",
text = element_text(family = raleway, color = cor3),
plot.title = element_text(family = bitter, size = 20, color = cor3),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
panel.spacing = unit(0.2, "lines"),
panel.background = element_rect(fill = cor5),
plot.margin = unit(c(1,1,1,1), "cm"))
}
adicionar_labels <- function(p) {
p + geom_text(aes(label = round(..y.., 2)),
position = position_stack(vjust = 0.5),
size = 4, color = cor3)
}
ggplot(mtcars, aes(x = factor(cyl), y = mpg, fill = factor(cyl))) +
geom_col(width = 0.2) +
adicionar_labels() +
ggtitle("Miles per gallon by cylinders") +
scale_fill_manual(values = c(cor1, cor2, cor3)) +
xlab("Cylinders") +
ylab("Miles per gallon") +
meu_tema() +
theme(plot.margin = unit(c(1, 1, 3, 1), "cm")) +
annotation_custom(rasterGrob(readPNG("https://apublica.org/wp-content/themes/apublica3/assets/logo-black.small.png"), interpolate=TRUE),
xmin = Inf, xmax = Inf, ymin = Inf, ymax = Inf)
ggplot(mtcars, aes(x = factor(cyl), y = mpg, fill = factor(cyl))) +
geom_col(width = 0.2) +
#  adicionar_labels() +
ggtitle("Miles per gallon by cylinders") +
scale_fill_manual(values = c(cor1, cor2, cor3)) +
xlab("Cylinders") +
ylab("Miles per gallon") +
meu_tema() +
theme(plot.margin = unit(c(1, 1, 3, 1), "cm")) +
annotation_custom(rasterGrob(readPNG("https://apublica.org/wp-content/themes/apublica3/assets/logo-black.small.png"), interpolate=TRUE),
xmin = Inf, xmax = Inf, ymin = Inf, ymax = Inf)
font_import(pattern = "bitter")
loadfonts()
my_theme <- theme(
text = element_text(family = "Bitter"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
#  panel.grid.major = element_line(color = "#E6E6E6"),
#  panel.grid.minor = element_line(color = "#F2F2F2"),
panel.border = element_blank(),
legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.position = "bottom",
plot.margin = unit(c(1, 1, 1, 1), "cm"),
plot.background = element_rect(fill = "#FFFFFF", color = NA)
)
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
# Exemplo de gráfico de colunas
data <- data.frame(categorias = c("A", "B", "C", "D"), valores = c(10, 20, 30, 40))
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
apublica_theme()
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
# Exemplo de gráfico de colunas
data <- data.frame(categorias = c("A", "B", "C", "D"), valores = c(10, 20, 30, 40))
my_theme <- my_theme + theme(plot.margin = unit(c(2, 2, 4, 2), "cm"))
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
my_theme <- theme(
text = element_text(family = "Bitter"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
#  panel.grid.major = element_line(color = "#E6E6E6"),
#  panel.grid.minor = element_line(color = "#F2F2F2"),
panel.border = element_blank(),
legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.position = "bottom",
plot.margin = unit(c(1, 1, 1, 1), "cm"),
plot.background = element_rect(fill = "#FFFFFF", color = NA)
)
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
# Exemplo de gráfico de colunas
data <- data.frame(categorias = c("A", "B", "C", "D"), valores = c(10, 20, 30, 40))
my_theme <- my_theme + theme(plot.margin = unit(c(2, 2, 4, 2), "cm"))
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
my_theme <- theme(
text = element_text(family = "Bitter"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
#  panel.grid.major = element_line(color = "#E6E6E6"),
#  panel.grid.minor = element_line(color = "#F2F2F2"),
panel.border = element_blank(),
legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.position = "bottom",
plot.margin = unit(c(1, 1, 1, 1), "cm"),
plot.background = element_rect(fill = "#FFFFFF", color = NA)
)
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
data <- data.frame(categorias = c("A", "B", "C", "D"), valores = c(10, 20, 30, 40))
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
ggsave("meu_grafico.png", width = 1400, height = 1400, dpi = 300)
ggsave("meu_grafico.png", width = 10, height = 10, dpi = 300)
my_theme <- theme(
text = element_text(family = "Bitter"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
panel.border = element_blank(),
legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.position = "bottom",
plot.margin = unit(c(1, 1, 1, 1), "cm"),
plot.background = element_rect(fill = "#FFFFFF", color = NA)
)
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
data <- data.frame(categorias = c("A", "B", "C", "D"), valores = c(10, 20, 30, 40))
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
my_theme <- theme(
text = element_text(family = "Bitter"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
#panel.background = element_rect(fill = "#FFFFFF", color = NA),
#panel.border = element_blank(),
#legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.position = "bottom",
plot.margin = unit(c(1, 1, 1, 1), "cm"),
plot.background = element_rect(fill = "#FFFFFF", color = NA)
)
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
my_theme <- my_theme + theme(plot.margin = unit(c(2, 2, 4, 2), "cm"))
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
my_theme <- theme(
text = element_text(family = "Bitter"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
panel.border = element_blank(),
#legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.position = "bottom",
plot.margin = unit(c(1, 1, 1, 1), "cm"),
plot.background = element_rect(fill = "#FFFFFF", color = NA)
)
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
# Exemplo de gráfico de colunas
data <- data.frame(categorias = c("A", "B", "C", "D"), valores = c(10, 20, 30, 40))
my_theme <- my_theme + theme(plot.margin = unit(c(2, 2, 4, 2), "cm"))
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
my_theme <- theme(
text = element_text(family = "Bitter"),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
panel.background = element_rect(fill = "#FFFFFF", color = NA),
#  panel.grid.major = element_line(color = "#E6E6E6"),
#  panel.grid.minor = element_line(color = "#F2F2F2"),
panel.border = element_blank(),
legend.background = element_rect(fill = "#FFFFFF", color = NA),
legend.text = element_text(size = 12),
legend.title = element_text(size = 14, face = "bold"),
legend.position = "bottom",
plot.margin = unit(c(1, 1, 1, 1), "cm"),
plot.background = element_rect(fill = "#FFFFFF", color = NA)
)
add_values <- function(data, x, y){
geom_text(aes_string(x = x, y = y, label = y), vjust = -0.5)
}
# Exemplo de gráfico de colunas
data <- data.frame(categorias = c("A", "B", "C", "D"), valores = c(10, 20, 30, 40))
my_theme <- my_theme + theme(plot.margin = unit(c(2, 2, 4, 2), "cm"))
ggplot(data, aes(x = categorias, y = valores, fill = categorias)) +
geom_col(width = 0.2) +
add_values(data, "categorias", "valores") +
labs(title = "Gráfico de colunas", x = "Categorias", y = "Valores") +
scale_fill_manual(values = c("#ffd400", "#653399", "#222222", "#000000")) +
my_theme
